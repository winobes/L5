/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_wall_2eproto__INCLUDED
#define PROTOBUF_C_wall_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _Wall Wall;
typedef struct _Extension Extension;
typedef struct _Vertex Vertex;


/* --- enums --- */


/* --- messages --- */

struct  _Wall
{
  ProtobufCMessage base;
  protobuf_c_boolean has_health;
  float health;
  protobuf_c_boolean has_exists;
  protobuf_c_boolean exists;
  protobuf_c_boolean has_solid;
  protobuf_c_boolean solid;
  protobuf_c_boolean has_hot;
  protobuf_c_boolean hot;
  protobuf_c_boolean has_w;
  float w;
  protobuf_c_boolean has_h;
  float h;
  protobuf_c_boolean has_d;
  float d;
  Extension *ext;
  char *sprite_name;
};
#define WALL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&wall__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, NULL, NULL }


struct  _Extension
{
  ProtobufCMessage base;
  protobuf_c_boolean has_nverts;
  int32_t nverts;
  size_t n_vert;
  Vertex **vert;
};
#define EXTENSION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&extension__descriptor) \
    , 0,0, 0,NULL }


struct  _Vertex
{
  ProtobufCMessage base;
  protobuf_c_boolean has_x;
  float x;
  protobuf_c_boolean has_y;
  float y;
};
#define VERTEX__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&vertex__descriptor) \
    , 0,0, 0,0 }


/* Wall methods */
void   wall__init
                     (Wall         *message);
size_t wall__get_packed_size
                     (const Wall   *message);
size_t wall__pack
                     (const Wall   *message,
                      uint8_t             *out);
size_t wall__pack_to_buffer
                     (const Wall   *message,
                      ProtobufCBuffer     *buffer);
Wall *
       wall__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   wall__free_unpacked
                     (Wall *message,
                      ProtobufCAllocator *allocator);
/* Extension methods */
void   extension__init
                     (Extension         *message);
size_t extension__get_packed_size
                     (const Extension   *message);
size_t extension__pack
                     (const Extension   *message,
                      uint8_t             *out);
size_t extension__pack_to_buffer
                     (const Extension   *message,
                      ProtobufCBuffer     *buffer);
Extension *
       extension__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   extension__free_unpacked
                     (Extension *message,
                      ProtobufCAllocator *allocator);
/* Vertex methods */
void   vertex__init
                     (Vertex         *message);
size_t vertex__get_packed_size
                     (const Vertex   *message);
size_t vertex__pack
                     (const Vertex   *message,
                      uint8_t             *out);
size_t vertex__pack_to_buffer
                     (const Vertex   *message,
                      ProtobufCBuffer     *buffer);
Vertex *
       vertex__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   vertex__free_unpacked
                     (Vertex *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Wall_Closure)
                 (const Wall *message,
                  void *closure_data);
typedef void (*Extension_Closure)
                 (const Extension *message,
                  void *closure_data);
typedef void (*Vertex_Closure)
                 (const Vertex *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor wall__descriptor;
extern const ProtobufCMessageDescriptor extension__descriptor;
extern const ProtobufCMessageDescriptor vertex__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_wall_2eproto__INCLUDED */
